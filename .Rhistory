source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5,2)
x<- rep(0:1, each = 5)
x
?rep
library(datasets)
Rprof()
fit <- lm(Y ~ x1 + x2)
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
$by.total
y <- rnorm(100)
fit <- lm(y ~ x1 + x2)
x2 <- rnorm(100)
x1 <- rnorm(100)
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
set.seed(1)
rpois(5,2)
source('~/.active-rstudio-document')
source('~/Untitled.R')
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf.<- read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
bye()
library(swirl)
swirl()
dim(mydf)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran r_arch:country)
select (cran, r_arch:country)
select (cran, country: r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(-(X:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?comparison
?Comparison
filter(cran, r_version <= "3.1.1", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version = !is.na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package, ip_id)
arrange(cran2,country,disc(r_version), ip_id)
arrange(cran2,country,desc(r_version), ip_id)
cran3 <- (select(cran, ip_id,package,size))
cran3 <- select(cran, ip_id,package,size)
cran3
mutate(cran3, size_mb = size/ 2^20)
mutate(cran3, size_mb = size/ 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = (size< 1000))
mutate(cran3, correct_size = size+ 1000)
summarize(cran, avg_bytes = mean(size))
getdata_data_ss06hid <- read.csv("~/Downloads/getdata_data_ss06hid.csv", header=FALSE)
View(getdata_data_ss06hid)
getwd()
exercise <- read.csv("~/Downloads/getdata_data_ss06hid.csv", header=TRUE)
View(exercise)
summary(exercise)
head(exercise)
summary(exercise$VAL)
sum (exercise$VAL > 1000000)
class(exercise$VAL)
sum (exercise$VAL= 24)
sum (exercise$VAL== 24)
sum (exercise$VAL== 1)
list(exercise)
library(xlsx)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url=fileUrl1, destfile="gas.xlsx", mode="w", method="curl")
dateDownloaded <- date()
dateDownloaded
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("gas.xlsx", sheetIndex=1, colIndex=colIndex. rowIndex=rowIndex)
dat <- read.xlsx("gas.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
sum (dat$Zip*dat$Ext, na.rm = T)
library(XML)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl2, useInternal=TRUE)
fileUrl <- "fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml""
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl2, useInternal=TRUE)
fileUrl2 <- "http://d396qusza40orc.cloudfront.net/getdata/data/restaurants.xml"
doc <- xmlTreeParse(fileUrl2, useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
length(zipcode[zipcode==21231])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "communities.csv", method = "curl")
list.files("communities.csv")
dateDowloaded <- date()
dateDowloaded
library(data.table)
install.packages("data.table")
library(data.table)
DT = data.frame("communities.csv")
head(DT)
fread(DT)
DT <- fread(input = "communities.csv", sep=",")
system.time(DT[,mean(pwgtp15,by=DT$SEX)])
library(swirl)
swirl()
library(dplyr)
cran <- dbl_df(mydf)
?dbl_df()
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
?tbl_df
summarize(by_group, mean(group))
summarize(by_group, mean(package))
summarize(by_package, mean(package))
summarize(by_package, mean(size))
?n
?dplyr
?n_distinct
?n
avg_bytes =mean(size) )
avg_bytes = mean(size) )
avg_bytes = mean(size)
?summarize
source('~/.active-rstudio-document')
# 1. count = n()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/summarize1.R')
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts >- filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/chain1.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/chain2.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/chain2.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/chain3.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmptadwBC/chain4.R')
submit()
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user = "genome", host= "genome-mysql.cse.ucsc.edu")
?dbConnect
library RMySQL
install.packages("dbConnect")
ucscDb <- dbConnect(MySQL(), user = "genome", host= "genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user = "genome", host= "genome-mysql.cse.ucsc.edu")
library "dbConnect"
library dbConnect
library swirl
library (swirl)
bye()
library(dbConnect)
ucscDb <- dbConnect(MySQL(), user = "genome", host= "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb)
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
view(query)
affyMisSmall <- fetch(query, n=10); dbClearResult(query)
query
head(query)
dbClearResult(query)
dbClearResult(hg19)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
source ("http://bioconductor.org/biocLite.R")
bioLite('rhdf5')
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGruop("example.h5", "foo")
created = h5createGruop("example.h5", "foo")
created = h5createGroup("example.h5", "foo")
h5ls("example.h5")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr = 5, nc = 2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2)) attr(B, "example.h5", "foo/foobaa/B")
attr(B, "example.h5", "foo/foobaa/B")
attr(B, "scale") <- "liter"
h5write(B,"example.h5", "foo/foobaa/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1, length.out = 5), c("ab","cde","fghi","a","s"), stringsAsFactors= FALSE)
h5write(df,"example.h5", "df")
h5ls("example.h5")
readA=h5read("example.h5", "foo/A")
readA
readdf=h5read("example.h5","df")
readdf
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
created=h5createFile("example.h5")
created
library (swirl)
swirl()
swirl()
install.packages("tidyr")
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(studentss, sex_class, -grade)
res <- gather(students2, sex_class, -grade)
res <- gather(students2, sex_class, male_1, male_2, female_1, female_2, -grade)
res <- gather(students2, sex_class, count, -grade)
res
View(students2)
View(students)
?separate
seperate(res, sex_class, c("sex", "class"))
separate(res, sex_class, c("sex", "class"))
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script1.R')
submit()
students3
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script2.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script2.R')
submit()
?spread
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script3.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script3.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script3.R')
submit()
extract_numeric("class5")
?mutate
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
print
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('~/.active-rstudio-document')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
reset()
reset()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
reset()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script4.R')
submit()
students4
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script5.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script6.R')
submit()
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//RtmpSQtIaH/script7.R')
submit()
bye()
library(swirl)
swirl()
passed
failed
mutate(passed, status = pass)
?mutate
mutate(passed, status = "pass")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows()
packageVersion('dplyr')
bind_rows(passed,failed)
sat
?select
?separate
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//Rtmp34qnZz/script8.R')
?gather
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//Rtmp34qnZz/script8.R')
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//Rtmp34qnZz/script8.R')
submit()
?group_by
source('/var/folders/6h/m1k0dtg94rx05ndtswpx7v7m0000gn/T//Rtmp34qnZz/script9.R')
submit()
set.seed(12345)
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10))
View(x)
?by
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile="survey", method="curl")
survey <- read.csv("survey")
head(survey, 10)
head(survey$households, 10)
View(survey)
survey$agricultureLogical <- ifelse(survey$ACR==3,survey$AGS==6)
agricultureLogical <- ifelse(survey$ACR==3,survey$AGS==6)
download.file(fileUrl, destfile="survey.csv", method="curl")
dateDownloaded <- date()
acs <- read.table("./survey.csv", sep=",", header=TRUE)
head(acs)
agricultureLogical<-(acs$ACR==3 & acs$AGS==6)
which(agricultureLogical)
install.packages("jpeg")
lbrary(jpeg)
library(jpeg)
fileUrl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileurl, destfile="jeff.jpg", method="curl")
download.file(fileUrl, destfile="jeff.jpg", method="curl")
jeff <- readJPEG("jeff.jpg", TRUE)
quantile(jeff, probs=c(0.3,0.8))
fileUrl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
download.file(fileUrl, destfile="gdp.csv", method="curl")
gdp <- read.csv("gdp.csv", sep=",", head =TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(fileUrl, destfile="edu.csv",method="curl")
edu <- read.csv("edu.csv", sep=",", head=TRUE)
x=CountryCode
View(edu)
X=CountryCode
View(gdp)
gdp$X=edu$CountryCode
gdp1<-gdp[5:194,]
mergedData = merge(gdp1,edu, by.x="X",by.y="CountryCode")
head(mergedData)
library(dplyr)
mergedData=as.data.frame(merge(gdp1,edu,by.x="X",by.y="CountryCode"))
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
quantile(mergedData$Gross.domestic.product.2012,probs=c(0.2,0.4,0.6,0.8,1))
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
mergedData$gdp=cut2(mergedData$Gross.domestic.product.2012,g=5)
table(mergedData$Income.Group,mergedData$gdp)
source('~/hh.R')
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dowload.file(fileUrl, destfile="community", method="curl")
download.file(fileUrl, destfile="community", method="curl")
com <- read.csv("community")
head(com.2)
head(com,2)
names(com)
splitNames = strsplit(names(com),"wgtp")
splitNames=[[123]]
splitNames=[123]
splitNames[[123]]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
download.file(fileUrl, destfile="./data/gdp.csv", method="curl")
gdp <- read.csv("./data/gdp.csv")
names(gdp)
head(gdp$Gross.domestic.product.2012)
head(gdp,2)
head(gdp)
names(gdp)
gdp$X.2
gdp$X.3
Mean <- mean(sub(",""",gdp$X.3))
cleandata < gsub(",""",gdp$X.3)
cleandata < gsub(",","",gdp$X.3)
CleanData < gsub(",","",gdp$X.3)
CleanData <- gsub(",","",gdp$X.3)
numData <- as.numeric(CleanData)
CleanData
numData <- as.numeric(CleanData[5:194])
mean(numData)
grep("^United",countryNames)
countryName = gdp$X.2
grep("^United",countryNames)
countryName <- gdp$X.2
grep("^United",countryName)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
download.file(fileUrl, destfile="gdpdata.csv", method="curl")
gdpdata <-read.csv("gdpdata.csv")
head(gdpdata,2)
gdpdata
gdp2 <- rm.na(gdpdata)
gdpdata <- gdpdata[!is.na(gdpdata)]
gdpdata
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
download.file(fileUrl, destfile="gdpdata.csv", method="curl")
gdpdata <-read.csv("gdpdata.csv")
GDP <-data.table(gdpdata[!is.na(gdpdata)])
GDP<- data.table(read.csv("gdpdata.csv", na.rm))
data.table?
?data.table
??data.table
install.packages("data.table")
GDP <-data.table(gdpdata[!is.na(gdpdata)])
GDP <-data.table(gdpdata[!is.na(gdpdata)])
newGdpData <- gdpdata[6:194, c(1, 2, 4, 5)]
colnames(newGdpData) <- c("CountryCode", "Ranking", "Economy", "GDP")
rownames(newGdpData) <- NULL
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(fileUrl1, destfile="education.csv", method="curl")
education <-read.csv("education.csv")
education
names(education)
mergedData <- mearge(newGDPData, education, by.x="CountryCode",by.y="CountryCode" all=TRUE)
mergedData <- mearge(newGDPData, education, by.x="CountryCode",by.y="CountryCode", all=TRUE)
mergedData <- merge(newGDPData, education, by.x="CountryCode",by.y="CountryCode", all=TRUE)
mergedData <- merge(newGdpData, education, by.x="CountryCode",by.y="CountryCode", all=TRUE)
names(mergedData) <- tolower(names(mergedData))
names(mergedData) <- tolower(names(mergedData))
head(mergedData)
length(grep("Fiscal year$", mergedData))
a <- as.character(mergedData[,13])
length(grep("Fiscal year end: June", a))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn=getSymbols("AMZN", auto.assign=FALSE)
sampleTimes=index(amzn)
lengh(sampleTimes)
length(sampleTimes)
bo<-year(sampleTimes) ==2012
length(sampleTimes$year==2012)
length(sampleTimes if sampleTimes$year==2012)
dd_12 <- read.table("/Volumes/YUNLE/dd_12.dta", header=TRUE, quote="\"")
library(foreign)
dd_12 <- read.table("/Volumes/YUNLE/dd_12.dta", header=TRUE, quote="\"")
View(dd_12)
